import{_ as a,c as i,o as e,N as l}from"./chunks/framework.0799945b.js";const b=JSON.parse('{"title":"Spring cloud Alibaba学习","description":"","frontmatter":{},"headers":[],"relativePath":"study/backend-dev/Microsoft-Service.md"}'),t={name:"study/backend-dev/Microsoft-Service.md"},o=l('<h1 id="spring-cloud-alibaba学习" tabindex="-1">Spring cloud Alibaba学习 <a class="header-anchor" href="#spring-cloud-alibaba学习" aria-label="Permalink to &quot;Spring cloud Alibaba学习&quot;">​</a></h1><h2 id="一、架构" tabindex="-1">一、架构 <a class="header-anchor" href="#一、架构" aria-label="Permalink to &quot;一、架构&quot;">​</a></h2><p>目前主要有五大架构</p><ul><li>单体应用架构</li><li>垂直应用架构</li><li>分布式架构</li><li>SOA架构</li><li>微服务架构</li></ul><h3 id="_1-1-单体应用架构" tabindex="-1">1.1. 单体应用架构 <a class="header-anchor" href="#_1-1-单体应用架构" aria-label="Permalink to &quot;1.1.  单体应用架构&quot;">​</a></h3><p>单体应用架构适用于一些小型项目，通常功能较为简单。所有的代码都集中在一个应用上。</p><p>优点：</p><ul><li>架构简单，开发成本低。</li><li>单节点，易于维护。</li></ul><p>缺点：</p><ul><li>容错率低。</li><li>对于大型项目不易于开发与维护。</li><li>无法对不同模块进行针对性优化与水平扩展。</li></ul>',10),r=[o];function c(n,s,d,_,p,u){return e(),i("div",null,r)}const f=a(t,[["render",c]]);export{b as __pageData,f as default};
