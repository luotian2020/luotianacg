import{_ as s,o as a,c as n,O as l}from"./chunks/framework.9ae6acb2.js";const F=JSON.parse('{"title":"Oracle","description":"","frontmatter":{},"headers":[],"relativePath":"study/lang-study/oracle.md","filePath":"study/lang-study/oracle.md"}'),p={name:"study/lang-study/oracle.md"},o=l(`<h1 id="oracle" tabindex="-1">Oracle <a class="header-anchor" href="#oracle" aria-label="Permalink to &quot;Oracle&quot;">​</a></h1><h3 id="存储过程" tabindex="-1">存储过程 <a class="header-anchor" href="#存储过程" aria-label="Permalink to &quot;存储过程&quot;">​</a></h3><h4 id="创建" tabindex="-1">创建 <a class="header-anchor" href="#创建" aria-label="Permalink to &quot;创建&quot;">​</a></h4><p>有参</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">replace</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">procedure</span><span style="color:#A6ACCD;"> test_pro(param_1 </span><span style="color:#F78C6C;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">varchar2</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                 param_2 </span><span style="color:#F78C6C;">in</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">varchar2</span><span style="color:#A6ACCD;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">                                 param_3 </span><span style="color:#F78C6C;">out</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">varchar2</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">as</span></span>
<span class="line"><span style="color:#A6ACCD;">                                 </span><span style="color:#89DDFF;">//</span><span style="color:#A6ACCD;">声明使用的变量</span></span>
<span class="line"><span style="color:#A6ACCD;">    tets_id </span><span style="color:#C792EA;">VARCHAR2</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">64</span><span style="color:#A6ACCD;">);</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">begin</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">    .....</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">end</span><span style="color:#A6ACCD;"> test_pro;</span></span></code></pre></div><p>无参</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">or</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">replace</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">procedure</span><span style="color:#A6ACCD;"> test_pro</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">as</span></span>
<span class="line"><span style="color:#89DDFF;">//</span><span style="color:#A6ACCD;">变量声明</span></span>
<span class="line"><span style="color:#F78C6C;">begin</span></span>
<span class="line"><span style="color:#F78C6C;">end</span><span style="color:#A6ACCD;"> test_pro;</span></span></code></pre></div><h3 id="常用函数" tabindex="-1">常用函数： <a class="header-anchor" href="#常用函数" aria-label="Permalink to &quot;常用函数：&quot;">​</a></h3><h4 id="sys-guid" tabindex="-1">sys_guid() <a class="header-anchor" href="#sys-guid" aria-label="Permalink to &quot;sys_guid()&quot;">​</a></h4><p>32位序列号，具有世界唯一性。（同一数据）</p><h4 id="sysdate" tabindex="-1">sysdate <a class="header-anchor" href="#sysdate" aria-label="Permalink to &quot;sysdate&quot;">​</a></h4><p>获取当日日期，一般与to_char 连用，即to_char(sysdate,&#39;yyyy-MM-dd&#39;)</p><h4 id="replace-org-str-sub-str-val" tabindex="-1">replace(org_str,sub_str, val) <a class="header-anchor" href="#replace-org-str-sub-str-val" aria-label="Permalink to &quot;replace(org_str,sub_str, val)&quot;">​</a></h4><p>将org_str中含有的sub_str进行替换为val.</p><h4 id="instr-org-str-sub-str" tabindex="-1">instr(org_str,sub_str): <a class="header-anchor" href="#instr-org-str-sub-str" aria-label="Permalink to &quot;instr(org_str,sub_str):&quot;">​</a></h4><p>判断字符串在那个位置，返回该字符串的索引（字符串默认索引从1开始）。</p><h4 id="regexp-count-source-str-pattern" tabindex="-1">regexp_count(source_str,pattern)： <a class="header-anchor" href="#regexp-count-source-str-pattern" aria-label="Permalink to &quot;regexp_count(source_str,pattern)：&quot;">​</a></h4><p>返回pattern在字符串出现的次数，如果未找到，返回0。</p><h4 id="decode-expression-condition-1-result-1-condition-2-result-2-result-default" tabindex="-1">decode(expression,condition_1,result_1.condition_2,result_2,...,result_default) <a class="header-anchor" href="#decode-expression-condition-1-result-1-condition-2-result-2-result-default" aria-label="Permalink to &quot;decode(expression,condition_1,result_1.condition_2,result_2,...,result_default)&quot;">​</a></h4><p>如果expression符合condition_1,则返回result_1，符合condition_2,则返回result_2,如果都不符合，则返回result_default,如果result_defsault不存在，则返回null.</p><h4 id="systimestamp" tabindex="-1">SYSTIMESTAMP <a class="header-anchor" href="#systimestamp" aria-label="Permalink to &quot;SYSTIMESTAMP&quot;">​</a></h4><p>获取当前时间戳。</p><h4 id="trunc-date-fmt" tabindex="-1">TRUNC（date[,fmt]） <a class="header-anchor" href="#trunc-date-fmt" aria-label="Permalink to &quot;TRUNC（date[,fmt]）&quot;">​</a></h4><p>返回指定格式的日期字符串，例子如下：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> dual </span><span style="color:#676E95;font-style:italic;">--2011-3-18 今天的日期为2011-3-18</span></span>
<span class="line"><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mm</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)  </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;">  dual </span><span style="color:#676E95;font-style:italic;">--2011-3-1  返回当月第一天.</span></span>
<span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">yy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> dual </span><span style="color:#676E95;font-style:italic;">--2011-1-1    返回当年第一天</span></span>
<span class="line"><span style="color:#F78C6C;">4</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">dd</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> dual </span><span style="color:#676E95;font-style:italic;">--2011-3-18  返回当前年月日</span></span>
<span class="line"><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">yyyy</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> dual </span><span style="color:#676E95;font-style:italic;">--2011-1-1  返回当年第一天</span></span>
<span class="line"><span style="color:#F78C6C;">6</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">,</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">d</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> dual </span><span style="color:#676E95;font-style:italic;">--2011-3-13 (星期天)返回当前星期的第一天</span></span>
<span class="line"><span style="color:#F78C6C;">7</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">hh</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> dual  </span><span style="color:#676E95;font-style:italic;">--2011-3-18 14:00:00  当前时间为14:41 </span></span>
<span class="line"><span style="color:#F78C6C;">8</span><span style="color:#A6ACCD;">.</span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> trunc(</span><span style="color:#C792EA;">sysdate</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">mi</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> dual </span><span style="color:#676E95;font-style:italic;">--2011-3-18 14:41:00  TRUNC()函数没有秒的精确</span></span></code></pre></div><h3 id="场景" tabindex="-1">场景 <a class="header-anchor" href="#场景" aria-label="Permalink to &quot;场景&quot;">​</a></h3><h4 id="_3-1-字段是否为空" tabindex="-1">3.1 字段是否为空 <a class="header-anchor" href="#_3-1-字段是否为空" aria-label="Permalink to &quot;3.1 字段是否为空&quot;">​</a></h4><ul><li>某个字段不为空：</li></ul><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> test_table </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> clumn_name </span><span style="color:#F78C6C;">IS NOT NULL</span></span></code></pre></div><ul><li>ISNULL函数</li></ul><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">ISNULL</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">value</span><span style="color:#A6ACCD;">,’</span><span style="color:#C792EA;">default</span><span style="color:#A6ACCD;">’) </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table_name</span></span></code></pre></div><p>如果为NULL，返回default,否则返回value.</p><ul><li>isblank函数</li></ul><p>如果为NULL,返回true，不为NULL，返回false</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> IsBlank(</span><span style="color:#F78C6C;">value</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table_name</span></span></code></pre></div><ul><li>COALESCE函数</li></ul><p>判断一个或多个参数是否为空，并返回第一个不为NULL参数的值，如果全部为NULL,则返回NULL</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">COALESCE</span><span style="color:#A6ACCD;"> (value1, value2, value3) </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table_name</span></span></code></pre></div><ul><li>NVL函数</li></ul><p>检测值是否为NULL。如果value为NULL,返回default,否则返回value</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">SELECT NVL(value,’default’) FROM table_name</span></span></code></pre></div><h4 id="_3-2-根据分隔符将某一字段分割为多行" tabindex="-1">3.2 根据分隔符将某一字段分割为多行 <a class="header-anchor" href="#_3-2-根据分隔符将某一字段分割为多行" aria-label="Permalink to &quot;3.2 根据分隔符将某一字段分割为多行&quot;">​</a></h4><p>仅针对一行数据</p><p>chr(10)---oracle的回车符</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;"> regexp_substr(m.NOTE, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[^</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;">chr(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">||</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">]+</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, rownum, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> NOTENAME</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#A6ACCD;">  m</span></span>
<span class="line"><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">CONNECT</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">BY</span><span style="color:#A6ACCD;">  regexp_substr(m.NOTE, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">[^</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">||</span><span style="color:#A6ACCD;">chr(</span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">||</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">]+</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, rownum, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">i</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#F78C6C;">is not NULL</span></span></code></pre></div><h4 id="_3-3-在select-语句中根据不同的值进行映射为其他的值" tabindex="-1">3.3 在select 语句中根据不同的值进行映射为其他的值 <a class="header-anchor" href="#_3-3-在select-语句中根据不同的值进行映射为其他的值" aria-label="Permalink to &quot;3.3 在select 语句中根据不同的值进行映射为其他的值&quot;">​</a></h4><p>可以使用：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">case</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">when</span><span style="color:#A6ACCD;"> condition1 </span><span style="color:#F78C6C;">then</span><span style="color:#A6ACCD;"> val1</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">when</span><span style="color:#A6ACCD;"> condition2 </span><span style="color:#F78C6C;">then</span><span style="color:#A6ACCD;"> val2</span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">end</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">as</span><span style="color:#A6ACCD;"> tablefieid,</span></span></code></pre></div><h4 id="_3-4-oracle中没有limit用法-可以根据-rownum进行实现" tabindex="-1">3.4 oracle中没有limit用法，可以根据 rownum进行实现 <a class="header-anchor" href="#_3-4-oracle中没有limit用法-可以根据-rownum进行实现" aria-label="Permalink to &quot;3.4 oracle中没有limit用法，可以根据 rownum进行实现&quot;">​</a></h4><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">table</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> rownum</span><span style="color:#89DDFF;">&lt;</span><span style="color:#F78C6C;">100</span></span></code></pre></div><p>3.5 动态执行sql语句可以用</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">EXECUTE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">IMMEDIATE</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">sqlt语句</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> 参数</span></span></code></pre></div><p>eg:</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">execute</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">immediate</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">insert into dept values   (:1, :2, :3)</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">   </span></span>
<span class="line"><span style="color:#A6ACCD;">     </span><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50</span><span style="color:#A6ACCD;">, l_depnam, l_loc;</span></span></code></pre></div><h4 id="_3-5-mybatis-与-的区别" tabindex="-1">3.5 mybatis #{}与\${}的区别 <a class="header-anchor" href="#_3-5-mybatis-与-的区别" aria-label="Permalink to &quot;3.5  mybatis #{}与\${}的区别&quot;">​</a></h4><ul><li>#{}将传入的值处理为字符串，\${} 将传入的值只是进行替换。</li><li>#{}可以防止sql注入，\${}常用于传表的字段名，表名。</li></ul><h4 id="_3-6-mybatis-转义字符" tabindex="-1">3.6 mybatis 转义字符 <a class="header-anchor" href="#_3-6-mybatis-转义字符" aria-label="Permalink to &quot;3.6  mybatis 转义字符&quot;">​</a></h4><table><thead><tr><th>原符号</th><th>mybatis</th></tr></thead><tbody><tr><td>&lt;</td><td>&amp;lt;</td></tr><tr><td>&gt;</td><td>&amp;gt;</td></tr><tr><td>&amp;</td><td>&amp;amp;</td></tr><tr><td>’</td><td>&amp;apos;</td></tr><tr><td>&quot;</td><td>&amp;quot;</td></tr></tbody></table><h4 id="_3-7-mybatis-动态sql-foreach" tabindex="-1">3.7 mybatis 动态sql foreach <a class="header-anchor" href="#_3-7-mybatis-动态sql-foreach" aria-label="Permalink to &quot;3.7 mybatis  动态sql foreach&quot;">​</a></h4><p>collection 参数值一般为list与array</p><p>Mybatis中对于多个参数则封装为Map,以@Param注解的值为key,否则默认统一使用数据序号,从1开始。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">and</span><span style="color:#A6ACCD;"> PK_ID </span><span style="color:#F78C6C;">IN</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;">foreach item</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">item</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">index</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">index</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">collection</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">array</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">open</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> separator</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">,</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">close</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">)</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">            </span><span style="color:#A6ACCD;">#{item}</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#A6ACCD;">foreach</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><p>foreach 参数</p><p>foreach元素的属性主要有item，index，collection，open，separator，close。</p><ul><li><strong>item</strong>：集合中元素迭代时的别名，该参数为必选。</li><li><strong>index</strong>：在list和数组中,index是元素的序号，在map中，index是元素的key，该参数可选</li><li><strong>open</strong>：foreach代码的开始符号，一般是(和close=&quot;)&quot;合用。常用在in(),values()时。该参数可选</li><li><strong>separator</strong>：元素之间的分隔符，例如在in()的时候，separator=&quot;,&quot;会自动在元素中间用“,“隔开，避免手动输入逗号导致sql错误，如in(1,2,)这样。该参数可选。</li><li><strong>close:</strong> foreach代码的关闭符号，一般是)和open=&quot;(&quot;合用。常用在in(),values()时。该参数可选。</li><li><strong>collection:</strong> 要做foreach的对象，作为入参时，List对象默认用&quot;list&quot;代替作为键，数组对象有&quot;array&quot;代替作为键，Map对象没有默认的键。当然在作为入参时可以使用@Param(&quot;keyName&quot;)来设置键，设置keyName后，list,array将会失效。 除了入参这种情况外，还有一种作为参数对象的某个字段的时候。举个例子：如果User有属性List ids。入参是User对象，那么这个collection = &quot;ids&quot;.如果User有属性Ids ids;其中Ids是个对象，Ids有个属性List id;入参是User对象，那么collection = &quot;ids.id&quot;</li></ul><p>在使用foreach的时候最关键的也是最容易出错的就是collection属性，该属性是必须指定的，但是在不同情况下，该属性的值是不一样的，主要有一下3种情况：</p><ul><li>如果传入的是单参数且参数类型是一个List的时候，collection属性值为list .</li><li>如果传入的是单参数且参数类型是一个array数组的时候，collection的属性值为array .</li><li>如果传入的参数是多个的时候，我们就需要把它们封装成一个Map了，当然单参数也可以封装成map，实际上如果你在传入参数的时候，在MyBatis里面也是会把它封装成一个Map的，map的key就是参数名，所以这个时候collection属性值就是传入的List或array对象在自己封装的map里面的key.</li></ul><h4 id="_3-8-排序" tabindex="-1">3.8 排序 <a class="header-anchor" href="#_3-8-排序" aria-label="Permalink to &quot;3.8 排序&quot;">​</a></h4><p>sql中进行排序</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">order by</span><span style="color:#A6ACCD;"> 字段一 </span><span style="color:#F78C6C;">ASC</span><span style="color:#A6ACCD;">,字段二 </span><span style="color:#F78C6C;">desc</span></span></code></pre></div><p>对于数字型的字符串，如果要进行排序，可以通过利用to_number函数将字符串转为数字，然后再进行排序，否则出来的结果为乱序。</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">order by</span><span style="color:#A6ACCD;"> to_number(数字型字符串) </span><span style="color:#F78C6C;">desc</span></span></code></pre></div><h4 id="_3-9-oracle-中-varchar与varchar2-的区别" tabindex="-1">3.9 oracle 中 varchar与varchar2 的区别 <a class="header-anchor" href="#_3-9-oracle-中-varchar与varchar2-的区别" aria-label="Permalink to &quot;3.9 oracle 中 varchar与varchar2 的区别&quot;">​</a></h4><p>varchar 为定长的字符数据，最长可为2000字符；varchar2 为可变长字符数据，最大长度为4000，二者并无本质的区别；varchar2是oracle提供的独特的数据类型oracle保证在任何版本中该数据类型向上和向下兼容但不保证varchar,这是因为varchar是标准sql提供的数据类型有可能随着sql标准的变化而改变.char对于不够位数的用空格添补，varchar2不用.varchar2把所有字符都占两字节处理(一般情况下)，varchar只对汉字和全角等字符占两字节，数字，英文字符等都是一个字节； VARCHAR2把空串等同于null处理，而varchar仍按照空串处理； VARCHAR2字符要用几个字节存储，要看数据库使用的字符集.</p><h4 id="_3-10-创建同义词" tabindex="-1">3.10 创建同义词： <a class="header-anchor" href="#_3-10-创建同义词" aria-label="Permalink to &quot;3.10 创建同义词：&quot;">​</a></h4><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">create</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">synonym</span><span style="color:#A6ACCD;"> 别名 for 数据库表名或dblink</span></span></code></pre></div><p>创建oracle db link</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">create</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">database</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">link</span><span style="color:#A6ACCD;"> db_1</span></span>
<span class="line"><span style="color:#F78C6C;">connect</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">to</span><span style="color:#A6ACCD;">	db_2_user identified </span><span style="color:#F78C6C;">by</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">db_2_user_password</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#F78C6C;">using</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#C3E88D;">demo=</span></span>
<span class="line"><span style="color:#C3E88D;">(description=</span></span>
<span class="line"><span style="color:#C3E88D;">(ADDRESS_LIST=</span></span>
<span class="line"><span style="color:#C3E88D;">(ADDRESS=(PROTOCOL=TCP)(HOST=db_2_ip)(PORT=1521)))</span></span>
<span class="line"><span style="color:#C3E88D;">(CONNNECT_DATA=</span></span>
<span class="line"><span style="color:#C3E88D;">(SERVICE_NAME=db_2_server)</span></span>
<span class="line"><span style="color:#C3E88D;">)</span></span>
<span class="line"><span style="color:#C3E88D;">)</span></span>
<span class="line"><span style="color:#89DDFF;">&#39;</span></span></code></pre></div><p>db_1是db link的名称； db_2_user是DB2这台机器上源数据库的用户名； db_2_user_password是密码； db_2_ip是DB2数据库地址， db_2_server是DB2数据库服务名。</p><h4 id="_3-11-oracle-数据库更新数据" tabindex="-1">3.11 oracle 数据库更新数据 <a class="header-anchor" href="#_3-11-oracle-数据库更新数据" aria-label="Permalink to &quot;3.11 oracle 数据库更新数据&quot;">​</a></h4><p>根据一个表更新另一个表的内容（需要进行连接的）</p><p>更新方式一：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">update</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">select</span><span style="color:#A6ACCD;"> t1.name name1, t2.name name2</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">from</span><span style="color:#A6ACCD;"> table1 t1</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">left join</span><span style="color:#A6ACCD;"> table2 t2 </span><span style="color:#F78C6C;">on</span><span style="color:#A6ACCD;"> t1.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> t2.id</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">where</span><span style="color:#A6ACCD;"> t1.age </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#A6ACCD;">) tmp</span></span>
<span class="line"><span style="color:#F78C6C;">set</span><span style="color:#A6ACCD;"> tmp.name1 </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> tmp.name2;</span></span></code></pre></div><p>如果报如下错误：无法修改与非键值保存表对应的列。</p><p>则可以选择更新方式：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">UPDATE</span><span style="color:#A6ACCD;"> table1 t1 </span></span>
<span class="line"><span style="color:#F78C6C;">SET</span><span style="color:#A6ACCD;"> t1.name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> t2.name</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table2 t2</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> t1.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> t2.id)</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> t1.age </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">EXISTS</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> t2.name</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table2 t2</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> t1.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> t2.id);</span></span></code></pre></div><p>如果报如下错误：单行子查询返回多个结果</p><p>则可以选择下一步更新方式：</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">UPDATE</span><span style="color:#A6ACCD;"> table1 t1 </span></span>
<span class="line"><span style="color:#F78C6C;">SET</span><span style="color:#A6ACCD;"> t1.name </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">max</span><span style="color:#A6ACCD;">(t2.name)</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table2 t2</span></span>
<span class="line"><span style="color:#A6ACCD;">               </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> t1.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> t2.id)</span></span>
<span class="line"><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> t1.age </span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">20</span></span>
<span class="line"><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">EXISTS</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> t2.name</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> table2 t2</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> t1.id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> t2.id);</span></span></code></pre></div><p>注意：在plSql中更新完数据记得提交。</p><h4 id="_3-12-oracle-函数返回数组类型" tabindex="-1">3.12 oracle 函数返回数组类型 <a class="header-anchor" href="#_3-12-oracle-函数返回数组类型" aria-label="Permalink to &quot;3.12 oracle 函数返回数组类型&quot;">​</a></h4><p>一.创建表对象</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE OR REPLACE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TYPE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foms_obj</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">OBJECT</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">    c_id              </span><span style="color:#C792EA;">VARCHAR2</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">32</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#A6ACCD;">  c_kpi_code        </span><span style="color:#C792EA;">VARCHAR2</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">32</span><span style="color:#A6ACCD;">) ,</span></span>
<span class="line"><span style="color:#A6ACCD;">  d_biz             </span><span style="color:#C792EA;">DATE</span><span style="color:#A6ACCD;"> ,</span></span>
<span class="line"><span style="color:#A6ACCD;">  c_status          </span><span style="color:#C792EA;">VARCHAR2</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">),</span></span>
<span class="line"><span style="color:#89DDFF;"> </span><span style="color:#676E95;font-style:italic;">-- 表字段</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>二.创建表</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE OR REPLACE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TYPE</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">foms_table</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">AS</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">TABLE</span><span style="color:#A6ACCD;"> OF foms_obj</span></span></code></pre></div><p>三.创建表函数</p><div class="language-sql"><button title="Copy Code" class="copy"></button><span class="lang">sql</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">CREATE OR REPLACE</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">FUNCTION</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">get_fixed_data_by_time</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">RETURN</span><span style="color:#A6ACCD;"> foms_table </span><span style="color:#F78C6C;">IS</span></span>
<span class="line"><span style="color:#A6ACCD;">    v_records foms_table :</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> foms_table</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		current_time </span><span style="color:#C792EA;">TIMESTAMP</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">		fixed_time </span><span style="color:#C792EA;">TIMESTAMP</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#F78C6C;">BEGIN</span></span>
<span class="line"><span style="color:#A6ACCD;">	  current_time:</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">SYSTIMESTAMP;</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#F78C6C;">IF</span><span style="color:#A6ACCD;"> TO_CHAR(current_time, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">HH24:MI</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">09:00</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">and</span><span style="color:#A6ACCD;"> TO_CHAR(current_time, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">HH24:MI</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">14:00</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">THEN</span></span>
<span class="line"><span style="color:#A6ACCD;">			fixed_time:</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">TRUNC(current_time, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">DD</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">9</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">HOUR</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">			FOR foms_rec </span><span style="color:#F78C6C;">IN</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">				 </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> V_FOMS_HS_GZ_TZCHBZLJFKB_CHK</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> D_XGSJ </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> TRUNC(fixed_time) </span><span style="color:#89DDFF;">-</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">DAY</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">14</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">HOUR</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> D_XGSJ </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> TRUNC(fixed_time) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">DAY</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">9</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">HOUR</span></span>
<span class="line"><span style="color:#A6ACCD;">			   ) </span><span style="color:#F78C6C;">LOOP</span></span>
<span class="line"><span style="color:#A6ACCD;">        v_records.EXTEND;</span></span>
<span class="line"><span style="color:#A6ACCD;">        v_records(v_records.COUNT) :</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> foms_obj(</span></span>
<span class="line"><span style="color:#A6ACCD;">        foms_rec.c_id ,</span></span>
<span class="line"><span style="color:#A6ACCD;">  foms_rec.c_kpi_code,</span></span>
<span class="line"><span style="color:#A6ACCD;">  foms_rec.d_biz,</span></span>
<span class="line"><span style="color:#A6ACCD;">  foms_rec.c_status</span></span>
<span class="line"><span style="color:#A6ACCD;">        );</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">LOOP</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	 ELSIF TO_CHAR(current_time, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">HH24:MI</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">14:00</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">THEN</span></span>
<span class="line"><span style="color:#A6ACCD;">		 fixed_time:</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">TRUNC(current_time, </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">DD</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">14</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">HOUR</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">			FOR foms_rec </span><span style="color:#F78C6C;">IN</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">				 </span><span style="color:#F78C6C;">SELECT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">*</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">FROM</span><span style="color:#A6ACCD;"> V_FOMS_HS_GZ_TZCHBZLJFKB_CHK</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#F78C6C;">WHERE</span><span style="color:#A6ACCD;"> D_XGSJ </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> TRUNC(fixed_time) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">9</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">HOUR</span></span>
<span class="line"><span style="color:#A6ACCD;">          </span><span style="color:#F78C6C;">AND</span><span style="color:#A6ACCD;"> D_XGSJ </span><span style="color:#89DDFF;">&lt;</span><span style="color:#A6ACCD;"> TRUNC(fixed_time) </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> INTERVAL </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">14</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">HOUR</span></span>
<span class="line"><span style="color:#A6ACCD;">			   ) </span><span style="color:#F78C6C;">LOOP</span></span>
<span class="line"><span style="color:#A6ACCD;">        v_records.EXTEND;</span></span>
<span class="line"><span style="color:#A6ACCD;">        v_records(v_records.COUNT) :</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> foms_gz_tzchbzljfkb_obj(</span></span>
<span class="line"><span style="color:#A6ACCD;">        foms_rec.c_id ,</span></span>
<span class="line"><span style="color:#A6ACCD;">  foms_rec.c_kpi_code,</span></span>
<span class="line"><span style="color:#A6ACCD;">  foms_rec.d_biz,</span></span>
<span class="line"><span style="color:#A6ACCD;">  foms_rec.c_status</span></span>
<span class="line"><span style="color:#A6ACCD;">        );</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">LOOP</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">ELSE</span></span>
<span class="line"><span style="color:#A6ACCD;">		v_records:</span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;">foms_gz_tzchbzljfkb_table</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">IF</span><span style="color:#A6ACCD;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F78C6C;">RETURN</span><span style="color:#A6ACCD;"> v_records;</span></span>
<span class="line"><span style="color:#F78C6C;">END</span><span style="color:#A6ACCD;">;</span></span></code></pre></div>`,97),e=[o];function t(c,r,C,y,A,D){return a(),n("div",null,e)}const d=s(p,[["render",t]]);export{F as __pageData,d as default};
